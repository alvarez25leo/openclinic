
<repository lastmodified='20171208093100.029' name='Weasis Bundle Repository'>
  <resource id='docking-frames/1.1.2.P19' presentationname='Docking Frames' symbolicname='docking-frames' uri='docking-frames-1.1.2-P19.jar' version='1.1.2.P19'>
    <size>
      3673963
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Docking Frames'/>
      <p n='symbolicname' v='docking-frames'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.preference'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.preference.editor'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.preference.model'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.preference.preferences'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.preference.preferences.choice'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.station'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.bubble'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse.displayer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse.rex'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse.stack'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse.stack.tab'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.eclipse.stack.tab4'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.flat'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.theme.smooth'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.extension.gui.dock.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.accept'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.action.actions'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.action.dropdown'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.action.popup'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.action.view'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.action.core'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.action.panel'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.action.predefined'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.action.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.behavior'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.event'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.group'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.grouping'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.action.panel'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.color'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.font'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.layout'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.station'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.intern.ui'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.layout'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.location'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.menu'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.mode'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.mode.station'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.perspective'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.perspective.mode'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.preference'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.theme'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.theme.color'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.theme.eclipse'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.common.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.component'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.control'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.control.focus'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.control.relocator'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.disable'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.displayer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.dockable'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.event'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.lookandfeel'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.menu'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.mode'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.mode.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.mode.station'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.mode.status'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.station.screen'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.facile.station.split'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.focus'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.frontend'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.layout'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.layout.location'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.perspective'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.security'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.flap'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.flap.button'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.flap.layer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.layer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.screen'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.screen.layer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.screen.magnet'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.screen.window'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.span'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.split'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.split.layer'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.stack'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.stack.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.stack.menu'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.stack.tab'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.stack.tab.layouting'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.station.support'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.support.lookandfeel'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.support.menu'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.support.mode'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.support.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.basic'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.basic.action'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.basic.action.buttons'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.basic.action.dropdown'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.basic.action.menu'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.border'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.color'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.font'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.icon'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.themes.nostack'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.title'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.color'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.extension'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.font'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.icon'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.laf'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.property'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.render'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.swing'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.gui.dock.util.text'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.util'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.util.container'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.util.filter'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.util.workarounds'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <capability name='package'>
      <p n='package' v='bibliothek.util.xml'/>
      <p n='version' t='version' v='1.1.2.P19'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.preference)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.preference ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.preference.editor)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.preference.editor
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.preference.model)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.preference.model
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.preference.preferences)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.preference.preferences
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.preference.preferences.choice)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.preference.preferences.choice
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.bubble)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.bubble ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse.displayer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse.displayer
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse.rex)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse.rex
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse.stack)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse.stack
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse.stack.tab)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse.stack.tab
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.flat)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.flat ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.smooth)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.smooth ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.accept)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.accept ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action.actions)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action.actions ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action.dropdown)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action.dropdown ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action.popup)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action.popup ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action.view)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action.view ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.core)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.core ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.panel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.panel ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.predefined)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.predefined
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.event)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.event ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.group)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.group ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.grouping)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.grouping ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.action.panel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.action.panel
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.color)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.color ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.font)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.font ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.layout)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.layout ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.station)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.station ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.ui)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.ui ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.layout)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.layout ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.location)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.location ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode.station)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode.station ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.perspective)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.perspective ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.perspective.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.perspective.mode
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.preference)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.preference ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.theme)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.theme ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.theme.color)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.theme.color ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.theme.eclipse)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.theme.eclipse ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.component)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.component ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.control)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.control ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.control.focus)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.control.focus ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.control.relocator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.control.relocator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.disable)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.disable ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.displayer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.displayer ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.dockable)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.dockable ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.event)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.event ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.lookandfeel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.lookandfeel ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.menu)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.menu ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.mode.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.mode.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.mode.station)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.mode.station ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.mode.status)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.mode.status ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.station.screen)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.station.screen ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.facile.station.split)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.facile.station.split ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.focus)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.focus ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.frontend)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.frontend ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.layout)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.layout ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.layout.location)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.layout.location ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.perspective)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.perspective ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.security)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.security ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.flap)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.flap ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.flap.button)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.flap.button ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.flap.layer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.flap.layer ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.layer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.layer ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.screen)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.screen ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.screen.layer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.screen.layer ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.screen.magnet)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.screen.magnet ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.screen.window)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.screen.window ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.span)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.span ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.split)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.split ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.split.layer)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.split.layer ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.stack)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.stack ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.stack.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.stack.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.stack.menu)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.stack.menu ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.stack.tab)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.stack.tab ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.stack.tab.layouting)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.stack.tab.layouting
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.support)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.support ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.support.lookandfeel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.support.lookandfeel ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.support.menu)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.support.menu ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.support.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.support.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.support.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.support.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.basic)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.basic ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.basic.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.basic.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.basic.action.buttons)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.basic.action.buttons
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.basic.action.dropdown)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.basic.action.dropdown
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.basic.action.menu)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.basic.action.menu
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.border)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.border ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.color)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.color ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.font)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.font ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.icon)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.icon ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.themes.nostack)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.themes.nostack ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.title)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.title ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.color)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.color ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.extension)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.extension ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.font)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.font ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.icon)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.icon ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.laf)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.laf ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.property)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.property ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.render)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.render ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.swing)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.swing ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.text)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.text ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util.container)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util.container ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util.filter)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util.filter ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util.workarounds)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util.workarounds ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util.xml)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util.xml ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.awt)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.awt
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.metal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.metal
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.7))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.7))
    </require>
  </resource>
  <resource id='jai-lib/1.1.4.b07' presentationname='Java Advanced Imaging [jai-lib]' symbolicname='jai-lib' uri='jai-lib-1.1.4-b07.jar' version='1.1.4.b07'>
    <description>
      The Java Advanced Imaging API extends the Java 2 platform by
       allowing sophisticated, high-performance image processing
       to be incorporated into Java applets and applications. It
       is a set of classes providing imaging functionality beyond
       that of    Java 2D and the Java Foundation classes, though
       it is designed for compatibility with    those APIs. This
       API implements a set of core image processing capabilities
       including    image tiling, regions of interest, deferred execution
       and a set of core image processing    operators, including
       many common point, area, and frequency domain operators.
    </description>
    <size>
      1625860
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Advanced Imaging [jai-lib]'/>
      <p n='symbolicname' v='jai-lib'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.codec'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.util'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.iterator'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.operator'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.registry'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.remote'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.tilecodec'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.widget'/>
      <p n='version' t='version' v='1.1.4.b07'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.image.codec.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.image.codec.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.registry)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.registry
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=sun.awt.image)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.awt.image
    </require>
    <require extend='false' filter='(&amp;(package=sun.awt.image.codec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.awt.image.codec
    </require>
    <require extend='false' filter='(&amp;(package=sun.security.action)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.security.action
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.6))
    </require>
  </resource>
  <resource id='jai-lib-linux-x86/1.1.4.b03' presentationname='JAI Native Linux x86 libraries' symbolicname='jai-lib-linux-x86' uri='jai-lib-linux-x86-1.1.4-b03.jar' version='1.1.4.b03'>
    <description>
      The Java Advanced Imaging API extends the Java 2 platform by
       allowing sophisticated, high-performance image processing
       to be incorporated into Java applets and applications. It
       is a set of classes providing imaging functionality beyond
       that of    Java 2D and the Java Foundation classes, though
       it is designed for compatibility with    those APIs. This
       API implements a set of core image processing capabilities
       including    image tiling, regions of interest, deferred execution
       and a set of core image processing    operators, including
       many common point, area, and frequency domain operators.
    </description>
    <size>
      1412414
    </size>
    <capability name='fragment'>
      <p n='host' v='jai-lib'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='jai-lib'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JAI Native Linux x86 libraries'/>
      <p n='symbolicname' v='jai-lib-linux-x86'/>
      <p n='version' t='version' v='1.1.4.b03'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=jai-lib)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host jai-lib
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.6))
    </require>
  </resource>
  <resource id='jai-lib-linux-x86-64/1.1.4.b03' presentationname='JAI Native Linux amd64 libraries' symbolicname='jai-lib-linux-x86-64' uri='jai-lib-linux-x86-64-1.1.4-b03.jar' version='1.1.4.b03'>
    <description>
      The Java Advanced Imaging API extends the Java 2 platform by
       allowing sophisticated, high-performance image processing
       to be incorporated into Java applets and applications. It
       is a set of classes providing imaging functionality beyond
       that of    Java 2D and the Java Foundation classes, though
       it is designed for compatibility with    those APIs. This
       API implements a set of core image processing capabilities
       including    image tiling, regions of interest, deferred execution
       and a set of core image processing    operators, including
       many common point, area, and frequency domain operators.
    </description>
    <size>
      1423477
    </size>
    <capability name='fragment'>
      <p n='host' v='jai-lib'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='jai-lib'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JAI Native Linux amd64 libraries'/>
      <p n='symbolicname' v='jai-lib-linux-x86-64'/>
      <p n='version' t='version' v='1.1.4.b03'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=jai-lib)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host jai-lib
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.6))
    </require>
  </resource>
  <resource id='jai-lib-windows-x86/1.1.4.b03' presentationname='JAI Native Windows x86 libraries' symbolicname='jai-lib-windows-x86' uri='jai-lib-windows-x86-1.1.4-b03.jar' version='1.1.4.b03'>
    <description>
      The Java Advanced Imaging API extends the Java 2 platform by
       allowing sophisticated, high-performance image processing
       to be incorporated into Java applets and applications. It
       is a set of classes providing imaging functionality beyond
       that of    Java 2D and the Java Foundation classes, though
       it is designed for compatibility with    those APIs. This
       API implements a set of core image processing capabilities
       including    image tiling, regions of interest, deferred execution
       and a set of core image processing    operators, including
       many common point, area, and frequency domain operators.
    </description>
    <size>
      2919824
    </size>
    <capability name='fragment'>
      <p n='host' v='jai-lib'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='jai-lib'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JAI Native Windows x86 libraries'/>
      <p n='symbolicname' v='jai-lib-windows-x86'/>
      <p n='version' t='version' v='1.1.4.b03'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=jai-lib)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host jai-lib
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.6))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.6))
    </require>
  </resource>
  <resource id='javax.vecmath/1.5.2' presentationname='Vecmath Library' symbolicname='javax.vecmath' uri='vecmath-1.5.2.jar' version='1.5.2'>
    <size>
      153853
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Vecmath Library'/>
      <p n='symbolicname' v='javax.vecmath'/>
      <p n='version' t='version' v='1.5.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.vecmath'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='org.apache.felix.bundlerepository/2.0.10' presentationname='Apache Felix Bundle Repository' symbolicname='org.apache.felix.bundlerepository' uri='org.apache.felix.bundlerepository-2.0.10.jar' version='2.0.10'>
    <description>
      Bundle repository service.
    </description>
    <size>
      255755
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-osgi-bundle-repository.html
    </documentation>
    <source>
      http://felix.apache.org/site/downloads.cgi
    </source>
    <capability name='service'>
      <p n='service' v='org.apache.felix.bundlerepository.RepositoryAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Bundle Repository'/>
      <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
      <p n='version' t='version' v='2.0.10'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.repository'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.bundlerepository'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.repository)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.repository ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.obr ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.shell ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.resource)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.resource ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.configadmin/1.8.14' presentationname='Apache Felix Configuration Admin Service' symbolicname='org.apache.felix.configadmin' uri='org.apache.felix.configadmin-1.8.14.jar' version='1.8.14'>
    <description>
      Implementation of the OSGi Configuration Admin Service Specification
       1.5
    </description>
    <size>
      154051
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-config-admin.html
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Configuration Admin Service'/>
      <p n='symbolicname' v='org.apache.felix.configadmin'/>
      <p n='version' t='version' v='1.8.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm.file'/>
      <p n='uses' v='org.apache.felix.cm,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.felix.cm)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.cm ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.cm.file)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.cm.file ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=1.6.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.5.0,1.6.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=1.3.0
    </require>
  </resource>
  <resource id='org.apache.felix.gogo.command/1.0.2' presentationname='Apache Felix Gogo Command' symbolicname='org.apache.felix.gogo.command' uri='org.apache.felix.gogo.command-1.0.2.jar' version='1.0.2'>
    <description>
      Provides basic shell commands for Gogo.
    </description>
    <size>
      54901
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Gogo Command'/>
      <p n='symbolicname' v='org.apache.felix.gogo.command'/>
      <p n='version' t='version' v='1.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.startlevel ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.gogo.runtime/1.0.6' presentationname='Apache Felix Gogo Runtime' symbolicname='org.apache.felix.gogo.runtime' uri='org.apache.felix.gogo.runtime-1.0.6.jar' version='1.0.6'>
    <description>
      Apache Felix Gogo Subproject
    </description>
    <size>
      212075
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Gogo Runtime'/>
      <p n='symbolicname' v='org.apache.felix.gogo.runtime'/>
      <p n='version' t='version' v='1.0.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.service.command'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.service.threadio'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime'/>
      <p n='uses' v='org.apache.felix.service.command,org.apache.felix.service.threadio,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime.activator'/>
      <p n='uses' v='org.apache.felix.gogo.runtime,org.apache.felix.service.command,org.apache.felix.service.threadio,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime.threadio'/>
      <p n='uses' v='org.apache.felix.service.threadio'/>
      <p n='version' t='version' v='1.0.6'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.gogo.runtime)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.gogo.runtime ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.gogo.runtime.threadio)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.gogo.runtime.threadio ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.threadio)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.service.threadio ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.gogo.shell/1.0.0' presentationname='Apache Felix Gogo Shell' symbolicname='org.apache.felix.gogo.shell' uri='org.apache.felix.gogo.shell-1.0.0.jar' version='1.0.0'>
    <description>
      Apache Felix Gogo Subproject
    </description>
    <size>
      66296
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Gogo Shell'/>
      <p n='symbolicname' v='org.apache.felix.gogo.shell'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.startlevel ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.metatype/1.1.2' presentationname='Apache Felix Metatype Service' symbolicname='org.apache.felix.metatype' uri='org.apache.felix.metatype-1.1.2.jar' version='1.1.2'>
    <description>
      Implementation of the OSGi Metatype Service Specification 1.2
    </description>
    <size>
      84536
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-metatype-service.html
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Metatype Service'/>
      <p n='symbolicname' v='org.apache.felix.metatype'/>
      <p n='version' t='version' v='1.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.metatype'/>
      <p n='uses' v='org.osgi.service.metatype,org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.metatype'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.3.0)(!(version&gt;=1.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.metatype ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.prefs/1.1.0' presentationname='Apache Felix Preferences Service' symbolicname='org.apache.felix.prefs' uri='org.apache.felix.prefs-1.1.0.jar' version='1.1.0'>
    <description>
      Implementation of the OSGi Preferences Service Specification
       1.1.1
    </description>
    <size>
      77109
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Preferences Service'/>
      <p n='symbolicname' v='org.apache.felix.prefs'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.prefs'/>
      <p n='uses' v='org.osgi.service.prefs'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.prefs'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.scr/2.0.12' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='org.apache.felix.scr-2.0.12.jar' version='2.0.12'>
    <description>
      Implementation of the Declarative Services specification 1.3
    </description>
    <size>
      407719
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-service-component-runtime.html
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Declarative Services'/>
      <p n='symbolicname' v='org.apache.felix.scr'/>
      <p n='version' t='version' v='2.0.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr.component'/>
      <p n='uses' v='org.osgi.service.component'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr.info'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component.runtime'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.component.runtime.dto,org.osgi.util.promise'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component.runtime.dto'/>
      <p n='uses' v='org.osgi.dto,org.osgi.framework.dto'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.function'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.promise'/>
      <p n='uses' v='org.osgi.util.function'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.metatype ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.6.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.service.command ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.shell ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr.component)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr.component ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr.info)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr.info ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.dto)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.dto ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.dto)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.dto ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=1.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component.runtime)(version&gt;=1.3.0)(!(version&gt;=1.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component.runtime ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component.runtime.dto)(version&gt;=1.3.0)(!(version&gt;=1.4.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component.runtime.dto ;version=[1.3.0,1.4.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.promise)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.promise ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.function)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.function ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.sling.commons.log/3.0.2.r3' presentationname='Apache Sling SLF4J Implementation' symbolicname='org.apache.sling.commons.log' uri='org.apache.sling.commons.log-3.0.2-r3.jar' version='3.0.2.r3'>
    <description>
      This bundle implements the SLF4J API with support for dynamic
              configuration through OSGi Configuration Admin Service.
    </description>
    <size>
      67367
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://sling.apache.org/site/logging.html
    </documentation>
    <category id='sling'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Sling SLF4J Implementation'/>
      <p n='symbolicname' v='org.apache.sling.commons.log'/>
      <p n='version' t='version' v='3.0.2.r3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.impl'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=1.8.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.0)(!(version&gt;=1.8.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=[1.6.0,1.8.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.helpers)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.helpers ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.7))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.7))
    </require>
  </resource>
  <resource id='slf4j.api/1.7.25' presentationname='slf4j-api' symbolicname='slf4j.api' uri='slf4j-api-1.7.25.jar' version='1.7.25'>
    <description>
      The slf4j API
    </description>
    <size>
      51714
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='slf4j-api'/>
      <p n='symbolicname' v='slf4j.api'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.event'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl ;version=1.6.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='weasis-acquire-editor/2.6.1' presentationname='Tool panel sample [weasis-acquire-editor]' symbolicname='weasis-acquire-editor' uri='weasis-acquire-editor-2.6.1.jar' version='2.6.1'>
    <size>
      89769
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Tool panel sample [weasis-acquire-editor]'/>
      <p n='symbolicname' v='weasis-acquire-editor'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.operations'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.graphics'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.utils'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.rectify.lib'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.rectify.lib.btn'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.rectify'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.contrast.comp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.contrast'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.calibrate'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.meta'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.annotate.comp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable.components.actions.annotate'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.dockable'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions.annotate)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions.annotate
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions.annotate.comp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions.annotate.comp
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions.calibrate)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions.calibrate
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions.contrast.comp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions.contrast.comp
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.actions.meta)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.actions.meta
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.dockable.components.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.dockable.components.util
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.core.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.core.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.panel)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.panel
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.panel.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.panel.imp
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.graphics)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.graphics ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.operations)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.operations ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.viewer2d)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.viewer2d ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.viewer2d.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.viewer2d.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.area)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.area ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.line)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.line ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.exceptions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.exceptions ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-acquire-explorer/2.6.1' presentationname='Media Importer [weasis-acquire-explorer]' symbolicname='weasis-acquire-explorer' uri='weasis-acquire-explorer-2.6.1.jar' version='2.6.1'>
    <size>
      821692
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Media Importer [weasis-acquire-explorer]'/>
      <p n='symbolicname' v='weasis-acquire-explorer'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.list'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.control'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.dialog'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.model.list'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.model.renderer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.model.actions'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.model.publish'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central.meta.panel'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central.meta.panel.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central.meta.model'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central.meta.model.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.gui.central.tumbnail'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.media'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.core.bean'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.core'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.acquire.explorer.dicom'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.components)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.components ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.tableeditors)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.tableeditors ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.common.base)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.common.base ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.util)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.util ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.core)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.core ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.core.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.core.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.dicom)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.dicom ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.model
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.model.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.model.imp
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.panel)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.panel
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.meta.panel.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.meta.panel.imp
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.central.tumbnail)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.central.tumbnail
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.dialog)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.dialog ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.list)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.list ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.model.actions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.model.actions
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.model.list)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.model.list ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.model.publish)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.model.publish
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.gui.model.renderer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.gui.model.renderer
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.acquire.explorer.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.acquire.explorer.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.explorer.list)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.explorer.list ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.viewer2d)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.viewer2d ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.display)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.display ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pr)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pr ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pref.node)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pref.node ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.param)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.param ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.tool)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.tool ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-base-explorer/2.6.1' presentationname='Media Explorer [weasis-base-explorer]' symbolicname='weasis-base-explorer' uri='weasis-base-explorer-2.6.1.jar' version='2.6.1'>
    <size>
      78707
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Media Explorer [weasis-base-explorer]'/>
      <p n='symbolicname' v='weasis-base-explorer'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.explorer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.explorer.list'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.explorer.list)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.explorer.list ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-base-ui/2.6.1' presentationname='Weasis Base UI [weasis-base-ui]' symbolicname='weasis-base-ui' uri='weasis-base-ui-2.6.1.jar' version='2.6.1'>
    <size>
      55842
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Weasis Base UI [weasis-base-ui]'/>
      <p n='symbolicname' v='weasis-base-ui'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.ui.gui'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.ui'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.extension.gui.dock.theme.eclipse.rex)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.extension.gui.dock.theme.eclipse.rex
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.predefined)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.predefined
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.event)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.event ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.location)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.location ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.theme)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.theme ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.theme.eclipse)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.theme.eclipse ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.station.screen)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.station.screen ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.util.color)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.util.color ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-base-viewer2d/2.6.1' presentationname='Image Viewer [weasis-base-viewer2d]' symbolicname='weasis-base-viewer2d' uri='weasis-base-viewer2d-2.6.1.jar' version='2.6.1'>
    <size>
      99633
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Image Viewer [weasis-base-viewer2d]'/>
      <p n='symbolicname' v='weasis-base-viewer2d'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.viewer2d'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.base.viewer2d.dockable'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.viewer2d)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.viewer2d ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.base.viewer2d.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.base.viewer2d.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.dialog)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.dialog ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.line)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.line ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-core-api/2.6.1' presentationname='Weasis Core API [weasis-core-api]' symbolicname='weasis-core-api' uri='weasis-core-api-2.6.1.jar' version='2.6.1'>
    <size>
      526273
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Weasis Core API [weasis-core-api]'/>
      <p n='symbolicname' v='weasis-core-api'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.command'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.explorer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.explorer.model'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.gui'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.gui.model'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.gui.task'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.gui.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.image'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.image.measure'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.image.op'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.image.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.media'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.media.data'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.service'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.api.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.codec)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.codec ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.accessibility)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.accessibility
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.plugins.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.plugins.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.iterator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.iterator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.registry)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.registry ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.basic
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.prefs)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.prefs ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.measure)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.measure ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-core-ui/2.6.1' presentationname='Weasis UI API (j2se) [weasis-core-ui]' symbolicname='weasis-core-ui' uri='weasis-core-ui-2.6.1.jar' version='2.6.1'>
    <size>
      1142952
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Weasis UI API (j2se) [weasis-core-ui]'/>
      <p n='symbolicname' v='weasis-core-ui'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.dialog'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.docking'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.editor'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.editor.image'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.editor.image.dockable'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.graphic'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.graphic.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.graphic.imp.angle'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.graphic.imp.area'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.graphic.imp.line'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.layer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.layer.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.utils'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.utils.algo'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.utils.bean'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.utils.exceptions'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.model.utils.imp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.pref'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.serialize'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.core.ui.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='it.cnr.imaa.essi.lablib.gui.checkboxtree'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='it.cnr.imaa.essi.lablib.gui.checkboxtree.examples'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.jxlayer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.jxlayer.plaf'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.jxlayer.plaf.effect'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.jxlayer.plaf.ext'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdesktop.jxlayer.plaf.ext.images'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.components'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.demo'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.durationpicker_underconstruction'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.optionalusertools'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.tableeditors'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.ysandbox'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.lgooddatepicker.zinternaltools'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.common.base'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.common.bean'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.common.internal'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.forms.factories'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.forms.layout'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.privatejgoodies.forms.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.action.view)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.action.view ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.core)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.core ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.action.predefined)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.action.predefined
       ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.event)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.event ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.intern.station)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.intern.station ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.location)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.location ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.control.focus)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.control.focus ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.components)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.components ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.optionalusertools)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.optionalusertools
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.tableeditors)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.tableeditors ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.zinternaltools)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.zinternaltools ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.common.base)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.common.base ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.common.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.common.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.forms.factories)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.forms.factories ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.forms.layout)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.forms.layout ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.privatejgoodies.forms.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.privatejgoodies.forms.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.iterator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.iterator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.print)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.print
    </require>
    <require extend='false' filter='(&amp;(package=javax.print.attribute)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.print.attribute
    </require>
    <require extend='false' filter='(&amp;(package=javax.print.attribute.standard)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.print.attribute.standard
    </require>
    <require extend='false' filter='(&amp;(package=javax.print.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.print.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.basic
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.metal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.metal
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=org.jdesktop.jxlayer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdesktop.jxlayer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdesktop.jxlayer.plaf)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdesktop.jxlayer.plaf ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdesktop.jxlayer.plaf.effect)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdesktop.jxlayer.plaf.effect ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.measure)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.measure ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.dialog)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.dialog ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.angle)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.angle ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.area)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.area ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.line)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.line ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.algo)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.algo ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.exceptions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.exceptions ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.serialize)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.serialize ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.internal.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.xml.internal.bind
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-au/2.6.1' presentationname='DICOM AU Player [weasis-dicom-au]' symbolicname='weasis-dicom-au' uri='weasis-dicom-au-2.6.1.jar' version='2.6.1'>
    <size>
      31534
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='DICOM AU Player [weasis-dicom-au]'/>
      <p n='symbolicname' v='weasis-dicom-au'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.au'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sound.sampled)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sound.sampled
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-codec/2.6.1' presentationname='DICOM Codec [weasis-dicom-codec]' symbolicname='weasis-dicom-codec' uri='weasis-dicom-codec-2.6.1.jar' version='2.6.1'>
    <size>
      1295855
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='DICOM Codec [weasis-dicom-codec]'/>
      <p n='symbolicname' v='weasis-dicom-codec'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.codec'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.codec.display'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.codec.geometry'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.codec.macro'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.codec.utils'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.mf'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.op'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.param'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.tool'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.util'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.data'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.image'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.codec'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1-r1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.codec.jpeg'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1-r1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.codec.mpeg'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1-r1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.plugins.dcm'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1-r1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.plugins.rle'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.imageio.stream'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1-r1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.io'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.media'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.net'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.net.pdu'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.net.service'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.common'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.findscu'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.getscu'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.movescu'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.storescp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.tool.storescu'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dcm4che3.util'/>
      <p n='version' t='version' v='0.0.0.dcm4chee-arc-light-5_10_1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.stream)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.stream ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.common)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.common ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=javax.vecmath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.vecmath
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.image)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.image ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.codec)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.codec ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.codec.jpeg)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.codec.jpeg ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.codec.mpeg)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.codec.mpeg ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.plugins.dcm)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.plugins.dcm ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.plugins.rle)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.plugins.rle ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.stream)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.stream ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.io)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.io ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net.pdu)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net.pdu ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net.service)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net.service ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.common)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.common ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.findscu)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.findscu ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.getscu)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.getscu ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.movescu)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.movescu ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.storescp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.storescp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.tool.storescu)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.tool.storescu ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.util)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.util ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.display)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.display ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.geometry)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.geometry ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.macro)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.macro ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.mf)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.mf ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.param)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.param ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-explorer/2.6.1' presentationname='DICOM Data Explorer [weasis-dicom-explorer]' symbolicname='weasis-dicom-explorer' uri='weasis-dicom-explorer-2.6.1.jar' version='2.6.1'>
    <size>
      348861
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='DICOM Data Explorer [weasis-dicom-explorer]'/>
      <p n='symbolicname' v='weasis-dicom-explorer'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.pref'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.pref.node'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.pref.download'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.pr'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.mf'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.print'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.explorer.wado'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common.mode)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common.mode ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.accessibility)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.accessibility
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.basic
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.image)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.image ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.imageio.plugins.dcm)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.imageio.plugins.dcm ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.io)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.io ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.media)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.media ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net.pdu)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net.pdu ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.util)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.util ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.area)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.area ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.line)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.line ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.exceptions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.exceptions ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.serialize)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.serialize ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.display)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.display ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.geometry)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.geometry ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.macro)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.macro ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pr)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pr ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pref.node)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pref.node ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.print)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.print ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.wado)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.wado ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.mf)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.mf ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.param)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.param ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-qr/2.6.1' presentationname='weasis-dicom-qr' symbolicname='weasis-dicom-qr' uri='weasis-dicom-qr-2.6.1.jar' version='2.6.1'>
    <description>
      DICOM Query/Retrieve
    </description>
    <size>
      54926
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='weasis-dicom-qr'/>
      <p n='symbolicname' v='weasis-dicom-qr'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.qr'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.qr.manisfest'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.components)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.components ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.optionalusertools)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.optionalusertools
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.lgooddatepicker.zinternaltools)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.lgooddatepicker.zinternaltools ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.net.service)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.net.service ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.display)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.display ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.mf)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.mf ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pref.node)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pref.node ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.wado)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.wado ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.mf)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.mf ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.param)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.param ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.qr.manisfest)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.qr.manisfest ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.tool)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.tool ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-send/2.6.1' presentationname='weasis-dicom-send' symbolicname='weasis-dicom-send' uri='weasis-dicom-send-2.6.1.jar' version='2.6.1'>
    <description>
      DICOM Send
    </description>
    <size>
      22790
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='weasis-dicom-send'/>
      <p n='symbolicname' v='weasis-dicom-send'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.send'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.media)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.media ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.util)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.util ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pref.node)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pref.node ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.param)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.param ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-sr/2.6.1' presentationname='DICOM Structured Report Viewer [weasis-dicom-sr]' symbolicname='weasis-dicom-sr' uri='weasis-dicom-sr-2.6.1.jar' version='2.6.1'>
    <size>
      52524
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='DICOM Structured Report Viewer [weasis-dicom-sr]'/>
      <p n='symbolicname' v='weasis-dicom-sr'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.sr'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.print.attribute)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.print.attribute
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.basic
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.exceptions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.exceptions ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.macro)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.macro ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pr)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pr ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-dicom-viewer2d/2.6.1' presentationname='2D DICOM Viewer [weasis-dicom-viewer2d]' symbolicname='weasis-dicom-viewer2d' uri='weasis-dicom-viewer2d-2.6.1.jar' version='2.6.1'>
    <size>
      311846
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='2D DICOM Viewer [weasis-dicom-viewer2d]'/>
      <p n='symbolicname' v='weasis-dicom-viewer2d'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.viewer2d'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.viewer2d.pref'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.viewer2d.mpr'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.viewer2d.mip'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.dicom.viewer2d.dockable'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bibliothek.gui.dock.common)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package bibliothek.gui.dock.common ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.stream)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.stream ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=it.cnr.imaa.essi.lablib.gui.checkboxtree)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package it.cnr.imaa.essi.lablib.gui.checkboxtree ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai.operator)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai.operator ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.vecmath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.vecmath
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.data)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.data ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.image)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.image ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.io)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.io ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dcm4che3.util)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dcm4che3.util ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.command)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.command ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.task)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.task ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.op)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.op ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.service)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.service ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.dialog)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.dialog ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.docking)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.docking ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.editor.image.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.editor.image.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.area)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.area ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.graphic.imp.line)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.graphic.imp.line ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.layer.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.layer.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.bean)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.bean ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.exceptions)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.exceptions ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.model.utils.imp)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.model.utils.imp ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.pref)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.pref ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.ui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.ui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.display)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.display ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.geometry)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.geometry ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.macro)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.macro ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.codec.utils)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.codec.utils ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.pr)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.pr ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.explorer.print)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.explorer.print ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.viewer2d)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.viewer2d ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.viewer2d.dockable)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.viewer2d.dockable ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.viewer2d.mip)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.viewer2d.mip ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.dicom.viewer2d.mpr)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.dicom.viewer2d.mpr ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-image-jni/2.6.1' presentationname='JPEG Codec [weasis-image-jni]' symbolicname='weasis-image-jni' uri='weasis-image-jni-2.6.1.jar' version='2.6.1'>
    <size>
      41893
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG Codec [weasis-image-jni]'/>
      <p n='symbolicname' v='weasis-image-jni'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.image.jni'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.common
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-imageio-codec/2.6.1' presentationname='ImageIO Codec [weasis-imageio-codec]' symbolicname='weasis-imageio-codec' uri='weasis-imageio-codec-2.6.1.jar' version='2.6.1'>
    <size>
      1384820
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ImageIO Codec [weasis-imageio-codec]'/>
      <p n='symbolicname' v='weasis-imageio-codec'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.imageio.codec'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageio.stream'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageio.plugins.bmp'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageio.plugins.jpeg2000'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageio.plugins.pnm'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageio.plugins.tiff'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageioimpl.common'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.operator'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageioimpl.plugins.raw'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageioimpl.plugins.clib'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageioimpl.plugins.jpeg'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.medialib.codec.jiio'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.medialib.codec.jpeg'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.imageioimpl.plugins.jpeg2000'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.plugins.jpeg2000)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.plugins.jpeg2000 ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.plugins.pnm)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.plugins.pnm ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.stream)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.stream ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.common)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.common ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.clib)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.clib ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.jpeg)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.jpeg ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.raw)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.raw ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.medialib.codec.jiio)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.medialib.codec.jiio ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.medialib.codec.jpeg)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.medialib.codec.jpeg ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.plugins.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.plugins.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.media.jai)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.media.jai ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.explorer.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.explorer.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.gui.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.gui.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.image.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.image.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.media.data)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.media.data ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.core.api.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.core.api.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-imageio-codec-linux-x86/1.2.0.b04' presentationname='ImageIO native Linux x86 codec' symbolicname='weasis-imageio-codec-linux-x86' uri='weasis-imageio-codec-linux-x86-1.2-b04.jar' version='1.2.0.b04'>
    <size>
      511851
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ImageIO native Linux x86 codec'/>
      <p n='symbolicname' v='weasis-imageio-codec-linux-x86'/>
      <p n='version' t='version' v='1.2.0.b04'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-imageio-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-imageio-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-imageio-codec-linux-x86-64/1.2.0.b04' presentationname='ImageIO native Linux amd64 codec' symbolicname='weasis-imageio-codec-linux-x86-64' uri='weasis-imageio-codec-linux-x86-64-1.2-b04.jar' version='1.2.0.b04'>
    <size>
      580202
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ImageIO native Linux amd64 codec'/>
      <p n='symbolicname' v='weasis-imageio-codec-linux-x86-64'/>
      <p n='version' t='version' v='1.2.0.b04'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-imageio-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-imageio-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-imageio-codec-windows-x86/1.2.0.b04' presentationname='ImageIO native Windows x86 codec' symbolicname='weasis-imageio-codec-windows-x86' uri='weasis-imageio-codec-windows-x86-1.2-b04.jar' version='1.2.0.b04'>
    <size>
      731519
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-imageio-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ImageIO native Windows x86 codec'/>
      <p n='symbolicname' v='weasis-imageio-codec-windows-x86'/>
      <p n='version' t='version' v='1.2.0.b04'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-imageio-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-imageio-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec/2.6.1' presentationname='Native JPEG Codecs [weasis-jpeg-codec]' symbolicname='weasis-jpeg-codec' uri='weasis-jpeg-codec-2.6.1.jar' version='2.6.1'>
    <size>
      397919
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Native JPEG Codecs [weasis-jpeg-codec]'/>
      <p n='symbolicname' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.jpeg'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.common
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.clib)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.clib
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.image.jni)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.image.jni ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.misc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.misc
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec-linux-x86/2.0.0.6b' presentationname='JPEG native Linux x86 codec' symbolicname='weasis-jpeg-codec-linux-x86' uri='weasis-jpeg-codec-linux-x86-2.0.0-6b.jar' version='2.0.0.6b'>
    <size>
      774590
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG native Linux x86 codec'/>
      <p n='symbolicname' v='weasis-jpeg-codec-linux-x86'/>
      <p n='version' t='version' v='2.0.0.6b'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-jpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-jpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec-linux-x86-64/2.0.0.6b' presentationname='JPEG native Linux amd64 codec' symbolicname='weasis-jpeg-codec-linux-x86-64' uri='weasis-jpeg-codec-linux-x86-64-2.0.0-6b.jar' version='2.0.0.6b'>
    <size>
      781890
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG native Linux amd64 codec'/>
      <p n='symbolicname' v='weasis-jpeg-codec-linux-x86-64'/>
      <p n='version' t='version' v='2.0.0.6b'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-jpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-jpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec-macosx-x86-64/2.0.0.6b' presentationname='JPEG native Mac amd64 codec' symbolicname='weasis-jpeg-codec-macosx-x86-64' uri='weasis-jpeg-codec-macosx-x86-64-2.0.0-6b.jar' version='2.0.0.6b'>
    <size>
      296190
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG native Mac amd64 codec'/>
      <p n='symbolicname' v='weasis-jpeg-codec-macosx-x86-64'/>
      <p n='version' t='version' v='2.0.0.6b'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-jpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-jpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec-windows-x86/2.0.0.6b' presentationname='JPEG native Windows x86 codec' symbolicname='weasis-jpeg-codec-windows-x86' uri='weasis-jpeg-codec-windows-x86-2.0.0-6b.jar' version='2.0.0.6b'>
    <size>
      563561
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG native Windows x86 codec'/>
      <p n='symbolicname' v='weasis-jpeg-codec-windows-x86'/>
      <p n='version' t='version' v='2.0.0.6b'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-jpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-jpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-jpeg-codec-windows-x86-64/2.0.0.6b' presentationname='JPEG native Windows x86-64 codec' symbolicname='weasis-jpeg-codec-windows-x86-64' uri='weasis-jpeg-codec-windows-x86-64-2.0.0-6b.jar' version='2.0.0.6b'>
    <size>
      630043
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-jpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JPEG native Windows x86-64 codec'/>
      <p n='symbolicname' v='weasis-jpeg-codec-windows-x86-64'/>
      <p n='version' t='version' v='2.0.0.6b'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-jpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-jpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec/2.6.1' presentationname='Native OpenJPEG Codec [weasis-openjpeg-codec]' symbolicname='weasis-openjpeg-codec' uri='weasis-openjpeg-codec-2.6.1.jar' version='2.6.1'>
    <size>
      381203
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Native OpenJPEG Codec [weasis-openjpeg-codec]'/>
      <p n='symbolicname' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='2.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.weasis.openjpeg'/>
      <p n='version' t='version' v='2.6.1.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageio.plugins.jpeg2000)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageio.plugins.jpeg2000
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.common
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.clib)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.clib
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.imageioimpl.plugins.jpeg2000)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.imageioimpl.plugins.jpeg2000
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.weasis.image.jni)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.weasis.image.jni ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.misc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.misc
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec-linux-x86/2.2.0' presentationname='openjpeg native Linux x86 codec' symbolicname='weasis-openjpeg-codec-linux-x86' uri='weasis-openjpeg-codec-linux-x86-2.2.0.jar' version='2.2.0'>
    <size>
      223595
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='openjpeg native Linux x86 codec'/>
      <p n='symbolicname' v='weasis-openjpeg-codec-linux-x86'/>
      <p n='version' t='version' v='2.2.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-openjpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-openjpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec-linux-x86-64/2.2.0' presentationname='OpenJPEG Linux amd64 codec' symbolicname='weasis-openjpeg-codec-linux-x86-64' uri='weasis-openjpeg-codec-linux-x86-64-2.2.0.jar' version='2.2.0'>
    <size>
      229100
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OpenJPEG Linux amd64 codec'/>
      <p n='symbolicname' v='weasis-openjpeg-codec-linux-x86-64'/>
      <p n='version' t='version' v='2.2.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-openjpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-openjpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec-macosx-x86-64/2.2.0' presentationname='openjpeg native Mac amd64 codec' symbolicname='weasis-openjpeg-codec-macosx-x86-64' uri='weasis-openjpeg-codec-macosx-x86-64-2.2.0.jar' version='2.2.0'>
    <size>
      168009
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='openjpeg native Mac amd64 codec'/>
      <p n='symbolicname' v='weasis-openjpeg-codec-macosx-x86-64'/>
      <p n='version' t='version' v='2.2.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-openjpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-openjpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec-windows-x86/2.2.0' presentationname='openjpeg native Windows x86 codec' symbolicname='weasis-openjpeg-codec-windows-x86' uri='weasis-openjpeg-codec-windows-x86-2.2.0.jar' version='2.2.0'>
    <size>
      202629
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='openjpeg native Windows x86 codec'/>
      <p n='symbolicname' v='weasis-openjpeg-codec-windows-x86'/>
      <p n='version' t='version' v='2.2.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-openjpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-openjpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='weasis-openjpeg-codec-windows-x86-64/2.2.0' presentationname='openjpeg native Windows x86-64 codec' symbolicname='weasis-openjpeg-codec-windows-x86-64' uri='weasis-openjpeg-codec-windows-x86-64-2.2.0.jar' version='2.2.0'>
    <size>
      223001
    </size>
    <license>
      http://www.eclipse.org/legal/epl-v10.html
    </license>
    <capability name='fragment'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='weasis-openjpeg-codec'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='openjpeg native Windows x86-64 codec'/>
      <p n='symbolicname' v='weasis-openjpeg-codec-windows-x86-64'/>
      <p n='version' t='version' v='2.2.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=weasis-openjpeg-codec)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host weasis-openjpeg-codec
    </require>
    <require extend='false' filter='(|(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=JavaSE-1.8))
    </require>
  </resource>
</repository>